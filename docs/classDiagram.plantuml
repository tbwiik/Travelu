@startuml cdMain

skin rose

class Destination {
    - String name
    - int rating
    - List<String> activities 
    - String comment
    + Destination(String name, DateInterval dateInterval, 
    int rating, List<String> activities, String comment)
    + Destination(Destination destination)
    + void remove activity(String activity)
}

class DestinationList {
    -List<Destination> destinations
    + void addDestination(Destination destination)
    - Destination getDestinationByName(String name)
    + Destination getDestinationCopyByName(String name)
    + void removeDestination(String name)
    + void updateDestination(Destination destination)
    + List<Destination> getList()
    + List <String> getDestinationNames()
    - List<String> getLowerCaseDestinationNames()
    + boolean containsDestination(String destinationName)
    + void sortByName()
    + void sortByRating()
}

class DateInterval << (D,orchid) >> {
    - int[] startDate
    - int[] endDate
    + DateInterval(int[] startDate, int[] endDate)
    + DateInterval(int startDay, int startMonth, 
    int startYear, int endDay, int endMonth, int endYear)
    + DateInterval(DateInterval dateInterval)
}

class DestinationController {
    - String currentActivity
    - String destinationListFile
    ListView<String> activitiesListView
    - void initialize()
    - void setupListView()
    - void updateListView()
    - handleReturnButton()
    - void handleAddActivity()
    - void handleRemoveActivity()
    - void writeChanges()
    - void handleSelectFile()
    + void changeFileWritingName(String fileWritingName)
} 

class DestinationListController {
    - ListView<String> listView
    - TextArea destinationText
    - Text feedbackText
    - DestinationList destinationList
    - String currentDestination
    - String destinationListFile
    - String currentDestinationFile
    - void initialize()
    - void setupListView()
    - void switchToDestination(String destinationName)
    + void handleAddDestination()
    + void handleRemoveDestination()
    + void handleSortByName()
    + void handleSortByRating()
}

class App {
    + void start(Stage stage)
}

class TraveluHandler {
    - {static} String getFilePath(String filename)
    - File getFile(String filename)
    + void writeJSON(Object object, String filename)
    + DestinationList readDestinationListJSON(String filename)
    + DestinationList readDestinationListJSON()
    + String readCurrentDestinationNameJSON(String filename)
    + String readCurrentDestinationNameJSON()
}

' DateInterval "dateInterval: *  " <-- Destination
' DestinationList --o "destinations: *" Destination
' Destination "currentDestination: 1   " <-- DestinationController
' DestinationList "destinationList: 1" <-- DestinationController
' TraveluHandler "traveluHandler: 1" <-- DestinationController
' DestinationList "destinationList: 1" <-- DestinationListController
' TraveluHandler "traveluHandler: 1   " <-- DestinationListController
' DestinationList "  destinationList: 1" <-- TraveluHandler
' DestinationController <-- App 
' DestinationListController <-- App 

skinparam linetype ortho

@enduml

